# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
    # Artifact name
        name: artifact
        # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
        path: /home/runner/work/war-jar-sample.gi/war-jar-sample.gi/target/war-jar-sample.war
    ## /home/runner/work/war-jar-sample.gi/war-jar-sample.gi/target/war-jar-sample.war
    # The desired behavior if no files are found using the provided path.
    
  dockerbuild:
        needs: build
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region:  ap-south-1
        
        
        - name: Download a Build Artifact
          uses: actions/download-artifact@v3.0.1
          with:
          # Artifact name
            name: artifact
            # Destination path
            path: .
            
        - name: listfiles
          run: |
               ls
               pwd
        
        - name: Build the Docker image
          run: |
               docker build . --file Dockerfile --tag harshad:latest
               docker push harshad:latest
          
#   dockerpushtoawsecr:
#         needs: dockerbuild
#         runs-on: ubuntu-latest
#         steps:
#         - name: Configure AWS credentials
#           uses: aws-actions/configure-aws-credentials@v1
#           with:
#             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#             aws-region: ${{ env.AWS_REGION }}
   
